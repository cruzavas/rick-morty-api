//"use client";

import { useState, useEffect  } from 'react';
import Head from 'next/head'
import ImgCard from '@/components/imgCard';
import { Grid, Pagination, Box, CircularProgress } from '@mui/material';

import style from '../styles/Home.module.css'

export interface Result {
  id: number;
  name: string;
  status: string;
  species: string;
  gender: string;
  image: string;
  url: string;
}

export interface Info {
  count: number;
  pages: number;
  next: string;
  prev?: any;
}

// export const getStaticProps = async() => {
//   async function getCharacters() {
//     const res = await fetch('https://rickandmortyapi.com/api/character');
//     const characters = await res.json();

//     return characters;
//   }

//   const data = await getCharacters();

//   return {
//     props: { characters: data.results, info: data.info }
//   };
// }

// export default function Home({ characters, info }: InferGetStaticPropsType<typeof getStaticProps>) {
export default function Home() {
  const [page, setPage] = useState(1);
  const [info, setInfo] = useState(null);
  const [characters, setCharacters] = useState([]);
  const [isLoading, setLoading] = useState(false);

  const getCharacters = async () => {
    const res = await fetch(`https://rickandmortyapi.com/api/character?page=${page}`);
    const data = await res.json();

    setInfo(data.info);
    setCharacters(data.results);
    setLoading(false);
  }

  useEffect(() => {
    setLoading(true);
    getCharacters();
  }, [page])

  function handlePaginationChange(e, value) {
    setPage(value);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={style.header}>
        <h1>Personajes de Rick and Morty</h1>
      </header>
      <div className={style.root}>
        {
          !info ? <h2>No profile data</h2> :
          isLoading ? 
          <Box sx={{ display: 'flex', justifyContent: 'center' }}>
            <CircularProgress />
          </Box> :
          <>
            <Grid container spacing={0} sx={{margin: '2% 0 0 0'}}>
              {
                characters.map((character: Result) => (
                <Grid item xs={12} sm={6} md={6} lg={4} className={style.cardGrid} key={ character.id }>
                  <ImgCard name={ character.name }
                  specie={ character.species }
                  image={ character.image } />
                </Grid>
                ))
              }
            </Grid>
            <Pagination
              count={info["pages"]}
              variant='outlined'
              color='primary'
              className='pagination'
              page={page}
              onChange={handlePaginationChange}
              sx={{ margin: '2%'}}
            />
         </>
        }
      </div>
    </>
  )
}
